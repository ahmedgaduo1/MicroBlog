trigger:
  branches:
    include:
    - main
    - develop
    - feature/*
    - release/*
    - hotfix/*
  paths:
    exclude:
    - README.md
    - docs/*
    - .gitignore

pr:
  branches:
    include:
    - main
    - develop
  paths:
    exclude:
    - README.md
    - docs/*
    - .gitignore

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  dotnetSdkVersion: '9.0.x'
  solutionPath: '**/*.sln'
  testProjects: '**/MicroBlog.Tests.csproj'
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages

jobs:
- job: BuildAndTest
  displayName: 'Build and Run Tests'
  
  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET SDK $(dotnetSdkVersion)'
    inputs:
      packageType: 'sdk'
      version: '$(dotnetSdkVersion)'
      includePreviewVersions: true

  - task: Cache@2
    displayName: 'Cache NuGet packages'
    inputs:
      key: 'nuget | "$(Agent.OS)" | **/packages.lock.json,**/packages.config,**/Directory.Packages.props'
      restoreKeys: |
        nuget | "$(Agent.OS)"
      path: '$(NUGET_PACKAGES)'
      cacheHitVar: 'CACHE_RESTORED'

  - task: DotNetCoreCLI@2
    displayName: 'Restore NuGet packages'
    inputs:
      command: 'restore'
      projects: '$(solutionPath)'
      feedsToUse: 'select'
      verbosityRestore: 'Normal'

  - task: DotNetCoreCLI@2
    displayName: 'Build solution'
    inputs:
      command: 'build'
      projects: '$(solutionPath)'
      arguments: '--configuration $(buildConfiguration) --no-restore'
  
  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests'
    inputs:
      command: 'test'
      projects: '$(testProjects)'
      arguments: '--configuration $(buildConfiguration) --no-build --collect:"XPlat Code Coverage" --settings "$(Build.SourcesDirectory)/tests/coverlet.runsettings"'
      publishTestResults: true
      testRunTitle: 'Unit Tests'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage report'
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
      reportDirectory: '$(Agent.TempDirectory)/**/TestResults'
      failIfCoverageEmpty: false
